---
import { getCollection } from 'astro:content';

import Layout from '../layouts/Layout.astro';

export async function getStaticPaths() {
  const projectEntries = await getCollection('projects');
  const cursosEntries = await getCollection('courses');

  // Crear un array combinado con las rutas para proyectos y cursos
  const paths = [
    ...projectEntries.map(entry => ({
      params: { slug: entry.slug }, props: { entry },
    })),
    ...cursosEntries.map(entry => ({
      params: { slug: entry.slug }, props: { entry },
    })),
  ];

  return paths;
}

interface Props {
  entry: {
    slug: string;
    data: {
      title: string;
      description: string;
      icon: string;
    };
    render: () => Promise<{ Content: any; headings: any[] }>;
  };
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();
---


<Layout title={`${entry.data.title} - Uayeb Caballero`}>
  <div id="animated-section" class="max-w-4xl mx-auto px-6 py-10 bg-gray-900 rounded-lg shadow-lg translate-y-10  transition-transform duration-700">
    <h1 class="text-5xl font-bold text-green-500 mb-6 text-center">{entry.data.title}</h1>
    <p class="text-xl text-gray-300 mb-8 text-center">{entry.data.description}</p>

    <nav class="toc mb-10 bg-gray-800 p-6 rounded-lg shadow-md">
        <h2 class="text-3xl font-semibold mb-4 text-green-400 text-center">Tabla de contenido</h2>
        <ul class="space-y-2">
            {headings.map((heading) => (
                <li class={`toc-level-${heading.depth} ml-${(heading.depth - 1) * 4}`}>
                    <a href={`#${heading.slug}`} class="text-gray-200 hover:text-orange-500 transition-colors duration-200 ease-in-out">
                        {heading.text}
                    </a>
                </li>
            ))}
        </ul>
    </nav>

    <article class="prose prose-orange lg:prose-lg max-w-none">
        <Content />
    </article>
  </div>
</Layout>

<style is:global>
  .prose h1 { @apply text-3xl font-bold text-green-300 mb-4 mt-8; }
  .prose h2 { @apply text-2xl font-semibold text-orange-700 mb-4 mt-8; }
  .prose h3 { @apply text-xl font-semibold text-orange-600 mb-3 mt-6; }
  .prose h4 { @apply text-xs font-semibold text-white mb-3 mt-6; }
  .prose p { @apply mb-4 text-white; }
  .prose ul { @apply list-disc list-inside mb-4; }
  .prose ol { @apply list-decimal list-inside mb-4; }
  .prose li { @apply mb-2; }
  .prose strong { @apply text-orange-900; }
  .prose a { @apply text-orange-600 hover:text-orange-800 underline; }
  .prose code { @apply bg-orange-100 text-orange-800 px-1 py-0.5 rounded; }
  .prose pre { @apply bg-gray-100 p-4 rounded-lg overflow-x-auto; }
  .prose pre code { @apply bg-transparent text-green-500; }
  .prose blockquote { @apply border-l-4 border-orange-500 pl-4 italic text-green-500; }
  .prose table { @apply w-full border-collapse border border-orange-200 mb-4; }
  .prose th, .prose td { @apply border border-orange-200 p-2; }
  .prose th { @apply bg-orange-100 font-semibold; }
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
	  const section = document.getElementById('animated-section');
	  section.classList.remove('opacity-0', 'translate-y-10');
	});
  </script>